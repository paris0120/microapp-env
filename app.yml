# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.8'
services:
  gateway-app:
    image: gateway
    restart: always
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://mysql:3306/microapps?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://mysql:3306/microapps?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/microapps
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=web_app
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=web_app
      - JHIPSTER_SLEEP=80 # gives time for microservices, dependencies to boot before the gateway, the entire stack will be ready to accept incoming requests.
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka  :9092
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:8080:8080
  mysql:
    image: mysql:8.0.30
    # volumes:
    #   - ~/volumes/microapps/mysql/:/var/lib/mysql/
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
      - ~/volumes/microapps/mysql/:/var/lib/mysql/
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=microapps
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 3306:3306
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
  mongodb:
    image: mongo:4.4.15
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - ~/volumes/microapps/mongodb/:/data/db/
#  jenkins:
#    image: jenkins/jenkins:lts
#    privileged: true
#    user: root
#    ports:
#     - 1080:8080
#     - 50000:50000
#    volumes:
#     - ~/docker/volumes/jenkins/jenkins_configuration:/var/jenkins_home
#     - /var/run/docker.sock:/var/run/docker.sock
#  neo4j:
#    image: neo4j:4.4.9
#    volumes:
#      - ~/docker/volumes/neo4j/:/data
#    environment:
#      - NEO4J_AUTH=none
#    # If you want to expose these ports outside your dev PC,
#    # remove the "127.0.0.1:" prefix
#    ports:
#      - '127.0.0.1:7474:7474'
#      - '127.0.0.1:7687:7687'
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
#    volumes:
#      - ~/docker/volumes/elasticsearch/:/usr/share/elasticsearch/data/
#    # If you want to expose these ports outside your dev PC,
#    # remove the "127.0.0.1:" prefix
#    ports:
#      - 127.0.0.1:9200:9200
#      - 127.0.0.1:9300:9300
#    environment:
#      - 'ES_JAVA_OPTS=-Xms256m -Xmx256m'
#      - 'discovery.type=single-node'
  kafka:
    image: confluentinc/cp-kafka:7.2.1
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 9092:9092
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
    depends_on:
      - "zookeeper"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    tmpfs: "/datalog"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  consul:
    image: consul:1.13.1
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: jhipster/consul-config-loader:v0.4.1
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
      # Uncomment to load configuration into Consul from a Git repository
      # as configured in central-server-config/git2consul.json
      # Also set SPRING_CLOUD_CONSUL_CONFIG_FORMAT=files on your apps
      # - CONFIG_MODE=git
  keycloak:
    image: quay.io/keycloak/keycloak:19.0.1
    command: ['start-dev --import-realm']
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    environment:
      - KC_DB=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_FEATURES=scripts
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 9080:9080
      - 9443:9443
